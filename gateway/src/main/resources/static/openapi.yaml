openapi: 3.0.1
info:
  title: Larpex
  description: Larpex API
  version: 0.0.1
servers:
  - url: /
paths:
  /payments:
    get:
      tags:
        - IPayments
      summary: Confirm payment
      operationId: getConfirm
      parameters:
        - name: command
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/ConfirmPaymentCommand"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmPaymentResponse"
    post:
      tags:
        - IPayments
      summary: Initialize payment
      operationId: postConfirm
      parameters:
        - name: command
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/InitializePaymentCommand"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InitializePaymentResponse"
  /users/{id}:
    get:
      tags:
        - UserService
      summary: Get user details
      operationId: getUserDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "404":
          description: User not found
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailResponse"

  /events:
    get:
      summary: Get Events List
      description: Retrieve a list of events.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventListResponse"
              example:
                - eventId: "0aeaad35-9878-41a4-8b39-fc506f94cdab"
                  name: "Event1"
                  hostname: "Host1"
                  startDate: "2023-01-01"
                  endDate: "2023-01-02"
                  status: "Planned"
                  isCurrentUserParticipating: true
                - eventId: "48c6951d-078f-43f3-8cdd-342344a3d0a2"
                  name: "Event2"
                  hostname: "Host2"
                  startDate: "2023-02-01"
                  endDate: "2023-02-02"
                  status: "Finished"
                  isCurrentUserParticipating: false
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                error: "Invalid request parameters"

  /events/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the event
        schema:
          type: string
          format: uuid
    get:
      summary: Get Event Details
      description: Retrieve details of a specific event.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetailsResponse"
              example:
                eventId: "48c6951d-078f-43f3-8cdd-342344a3d0a2"
                name: "Event1"
                hostname: "Host1"
                startDate: "2023-01-01"
                endDate: "2023-01-02"
                status: "InProgress"
                isCurrentUserParticipating: true
                games:
                  [
                    { id: "a1f9d581-83e1-4e28-a2f6-e71b6d0b9732" },
                    { id: "0aeaad35-9878-41a4-8b39-fc506f94cdab" },
                  ]
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                error: "Invalid request parameters"

  /events/{uid}/{eid}:
    parameters:
      - name: uid
        in: path
        required: true
        description: User ID
        schema:
          type: string
          format: uuid
      - name: eid
        in: path
        required: true
        description: Event ID
        schema:
          type: string
          format: uuid
    post:
      summary: Sign Up for Event
      description: Sign up a user for a specific event.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpResponse"
              example:
                status: "Success"
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                error: "Invalid request parameters"

  /interactions:
    post:
      tags:
        - interaction-controller
      operationId: postInteract
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InteractCommand"
        required: true
      responses:
        "400":
          description: Interaction not performed due to malformed qr code
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InteractResponse"
        "200":
          description: Interaction performed
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InteractResponse"

components:
  schemas:
    UserDetailResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        alias:
          type: string
        name:
          type: string
        surname:
          type: string
        birthDate:
          type: string
          format: date
        email:
          type: string

    EventListResponse:
      type: array
      items:
        type: object
        properties:
          eventId:
            type: string
            format: uuid
          name:
            type: string
          hostname:
            type: string
          startDate:
            type: string
    EventDetailsResponse:
      type: object
      properties:
        eventId:
          type: string
          format: uuid
        name:
          type: string
        hostname:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
        isCurrentUserParticipating:
          type: boolean
        games:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
    SignUpResponse:
      type: object
      properties:
        status:
          type: string
    InteractCommand:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        qrCode:
          type: string
    InteractResponse:
      type: object
      properties:
        interactionType:
          type: string
          enum:
            - OPEN_DOOR
            - OPEN_CHEST
    InitializePaymentCommand:
      type: object
      properties:
        amount:
          type: number
          format: double
        userId:
          type: string
          format: uuid
        eventId:
          type: string
          format: uuid
        paymentMethod:
          type: string
          enum:
            - BLIK
            - TRANSFER
    InitializePaymentResponse:
      type: object
      properties:
        redirectUri:
          type: string
    ConfirmPaymentCommand:
      type: object
      properties:
        eventId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
    ConfirmPaymentResponse:
      type: object
      properties:
        exists:
          type: boolean
